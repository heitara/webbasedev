<?xml version="1.0" encoding="UTF-8"?>

<Module>
  <ModulePrefs title="Hello, world!">
    <Require feature="opensocial-0.8" />
    <Require feature="dynamic-height" />
  </ModulePrefs>
  <Content type="html"><![CDATA[

<div id="target"></div>

<script type="text/javascript">
				
var _gameIFServletUrl = "https://www.game-if.com/opensocialTitlePlay.html";
var _providerId = "1";
var _titleId = "1";

var _userId = null;
var _birthY = null;
var _birthM = null;
var _birthD = null;
var _sexCd = null;

function _inviteFriends() {

	opensocial.requestShareApp("VIEWER_FRIENDS", null, function(response) {
	
		if (response.hadError()) {
		
			var errCode = response.getErrorCode();
			alert(errCode);
		  
		} else {
		
			var recipientIds = response.getData()["recipientIds"];
			alert(recipientIds);
		}
	});
}

function _reloadPage() {

	window.location.reload(true);
}

function _setUserProfile(viewer) {
	
	var _birthday = null;
	var _gender = null;
	
	_userId = viewer.getId();
	
	_birthday = viewer.getField(opensocial.Person.Field.DATE_OF_BIRTH);
	
	if (_birthday != null) {
	
		_birthY = new Date(_birthday).getFullYear();
		_birthM = new Date(_birthday).getMonth() + 1;
		_birthD = new Date(_birthday).getDate();
	}
	
	_gender = viewer.getField(opensocial.Person.Field.GENDER);
	
	if (_gender != null) {
	
		if (_gender.key == "MALE") {
		
			_sexCd = "1";
			
		} else {
		
			_sexCd = "0";
		}
	}
}

function _doGameIFChargeResponse(resdata) {

	mixi.util.requestExternalNavigateTo(resdata.data.htmlText, mixi.util.ExternalSiteType.PAYMENT);
}

function _getGameIFChargeParam(serverId) {

	var params = _getGameIFBaseParam(serverId);
	
	var postData = {};
	
	postData["providerId"] = _providerId;
	postData["titleId"] = _titleId;
	postData["serverId"] = serverId;
	
	postData["act"] = "charge";
	postData["memId"] = _userId;
	
	params[gadgets.io.RequestParameters.POST_DATA] = gadgets.io.encodeValues(postData);

	//console.log(params);
	return params;
}

function _gotoGameIFCharge(serverId) {
	
	gadgets.io.makeRequest(_gameIFServletUrl, function(resdata) { _doGameIFChargeResponse(resdata); }, _getGameIFChargeParam(serverId));
}

function _getGameIFBaseParam() {

	var params = {};
	
	params[gadgets.io.RequestParameters.METHOD] = gadgets.io.MethodType.POST;
	params[gadgets.io.RequestParameters.AUTHORIZATION] = gadgets.io.AuthorizationType.SIGNED;
	params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;
	
	return params;
}

function _getGameIFTitlePlayParam(serverId) {

	var params = _getGameIFBaseParam();
	
	var postData = {};
	
	postData["providerId"] = _providerId;
	postData["titleId"] = _titleId;
	
	if (serverId != null) { postData["serverId"] = serverId; }
	
	postData["memId"] = _userId;
	postData["sexCd"] = _sexCd;
	postData["birthY"] = _birthY;
	postData["birthM"] = _birthM;
	postData["birthD"] = _birthD;
	
	params[gadgets.io.RequestParameters.POST_DATA] = gadgets.io.encodeValues(postData);
	
	//console.log(params);
	
	return params;
}

function _doGameIFTitlePlay(serverId) {
	
	gadgets.io.makeRequest(_gameIFServletUrl, function(resdata) { _doGameIFResponse(resdata); }, _getGameIFTitlePlayParam(serverId));
}

function _doGameIFResponse(resdata) {

	//console.log(resdata);
	gadgets.window.adjustHeight(650);
	document.getElementById('target').innerHTML = resdata.data.htmlText;
}

function _doRequestAfterPageLoad(data) {

	if (!data.hadError()) {
	
		var item = data.get("viewer");
		
		if (item.hadError()) {
		
			var code = item.getErrorCode();
			alert("エラー[ " + code + " ]が発生しました。");
			//TODO:画面遷移
			
		} else {
			
			_setUserProfile(item.getData());
			
			gadgets.io.makeRequest(_gameIFServletUrl, function(resdata) { _doGameIFResponse(resdata); }, _getGameIFTitlePlayParam(null));
		}
	}
}

function _doPageLoad() {

	var req = opensocial.newDataRequest();
	var params = {};
	
	params[opensocial.DataRequest.PeopleRequestFields.PROFILE_DETAILS] = [
	
		opensocial.Person.Field.DATE_OF_BIRTH,
		opensocial.Person.Field.GENDER,
	];
	
	req.add(req.newFetchPersonRequest(opensocial.IdSpec.PersonId.VIEWER, params), "viewer");
	
	req.send( function(data) { _doRequestAfterPageLoad(data); } );
}

gadgets.util.runOnLoadHandlers( new function() { _doPageLoad(); });

</script>

  ]]></Content>
</Module>
